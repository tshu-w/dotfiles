# -*- mode: sh -*-
setopt no_global_rcs

export LANG=en_US
export LANGUAGE=en # for Ubuntu
export LC_ALL=en_US.UTF-8
export XAPIAN_CJK_NGRAM=yes

export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share

export PATH=$HOME/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin
export MANPATH=$HOME/.local/share/man:/usr/local/share/man:/usr/share/man
export INFOPATH=$HOME/.local/share/info:/usr/local/share/info:/usr/share/info

if [[ `uname` == "Darwin" ]]; then
    for pkg in "coreutils" "findutils" "gnu-sed" "gnu-tar"; do
        export PATH=/usr/local/opt/$pkg/libexec/gnubin:$PATH
    done

    export PATH=$PATH:/Library/TeX/texbin:/Library/Apple/usr/bin

    export CONDA_HOME=/usr/local/Caskroom/miniconda/base
    export PATH=$CONDA_HOME/bin:$PATH

    export MANPATH=$MANPATH:/Library/TeX/Distributions/.DefaultTeX/Contents/Man

    alias trash='trash -F'
else
    [ -d /home/linuxbrew/.linuxbrew ] && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
    [ -d $XDG_DATA_HOME/linuxbrew ] && eval $($XDG_DATA_HOME/linuxbrew/bin/brew shellenv)

    export CONDA_HOME=$XDG_DATA_HOME/conda
    export PATH=$CONDA_HOME/bin:$PATH

    export FPATH=$HOMEBREW_PREFIX/share/zsh/site-functions:$FPATH

    export NPM_CONFIG_PREFIX=$HOME/.local
fi

ZDOTDIR=$HOME/.config/zsh

export ZSH_DISABLE_COMPFIX="true" # disable compinit warning
[[ $VENDOR == ubuntu ]] && export skip_global_compinit=1

export CONDARC=$XDG_CONFIG_HOME/conda/condarc
export DOCKER_CONFIG=$XDG_CONFIG_HOME/docker
export GNUPGHOME=$XDG_CONFIG_HOME/gnupg
export IPYTHONDIR=$XDG_CONFIG_HOME/ipython
export JUPYTER_CONFIG_DIR=$XDG_CONFIG_HOME/jupyter
export MACHINE_STORAGE_PATH=$XDG_DATA_HOME/docker-machine
export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc
export VIMINIT="set nocp | source $XDG_CONFIG_HOME/vim/vimrc"
export WAKATIME_HOME=$XDG_DATA_HOME/wakatime
export LESSHISTFILE=-

export ZSH_WAKATIME_BIN=`command -v wakatime-cli`

unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
    export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
fi
export GPG_TTY=$(tty)
